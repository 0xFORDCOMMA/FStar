OCAMLC=ocamlfind ocamlc -thread -package batteries -linkpkg -g
OCAMLOPT=ocamlfind ocamlopt -thread -package batteries -linkpkg -g
OCAMLDEP=ocamldep
INCLUDES=                 # all relevant -I options here
OCAMLFLAGS=$(INCLUDES)    -w -8 # add other options for ocamlc here
OCAMLOPTFLAGS=$(INCLUDES) -w -8 # add other options for ocamlopt here

FSTAR_OBJS=support.cmx Microsoft_FStar_Options.cmx Microsoft_FStar_Absyn_Syntax.cmx Microsoft_FStar_Absyn_Const.cmx Microsoft_FStar_Absyn_Visit.cmx Microsoft_FStar_Absyn_Util.cmx Microsoft_FStar_Absyn_Print.cmx Microsoft_FStar_Absyn_SSyntax.cmx Microsoft_FStar_Tc_Env.cmx Microsoft_FStar_Tc_Recheck.cmx Microsoft_FStar_Tc_Normalize.cmx Microsoft_FStar_Tc_Errors.cmx Microsoft_FStar_Tc_Rel.cmx Microsoft_FStar_Tc_Util.cmx Microsoft_FStar_Tc_Tc.cmx Microsoft_FStar_Parser_AST.cmx Microsoft_FStar_Parser_DesugarEnv.cmx Microsoft_FStar_Parser_Desugar.cmx Microsoft_FStar_Parser_Parse.cmx Microsoft_FStar_Parser_Lexhelp.cmx Microsoft_FStar_Parser_LexFStar.cmx Microsoft_FStar_Parser_ParseIt.cmx Microsoft_FStar_Parser_Driver.cmx Microsoft_FStar_ToSMT_Term.cmx Microsoft_FStar_ToSMT_Z3.cmx Microsoft_FStar_ToSMT_SplitQueryCases.cmx Microsoft_FStar_ToSMT_Encode.cmx FSharp_Format.cmx Microsoft_FStar_Extraction_ML_Syntax.cmx Microsoft_FStar_Extraction_ML_Env.cmx Microsoft_FStar_Extraction_ML_Util.cmx Microsoft_FStar_Extraction_OCaml_Code.cmx Microsoft_FStar_Extraction_ML_Code.cmx Microsoft_FStar_Extraction_ML_ExtractTyp.cmx Microsoft_FStar_Extraction_ML_ExtractExp.cmx Microsoft_FStar_Extraction_ML_ExtractMod.cmx Microsoft_FStar_FStar.cmx

# The part of the parser that's generated by the `parser` target here
PARSER_MLS=Microsoft_FStar_Parser_LexFStar.ml Microsoft_FStar_Parser_Parse.ml Microsoft_FStar_Parser_ParseIt.ml parse.ml parse.mli

all: fstar.exe

package: fstar.exe
	rm -dfr fstar && mkdir fstar
	cp ../../LICENSE fstar/
	mkdir fstar/bin
	cp README fstar/
	cp ../../setenv.sh fstar/
	cd ../.. && git archive --format=tar --prefix=lib/ HEAD:lib/ | tar -x -C src/ocaml-output/fstar
	cp fstar.exe fstar/bin/fstar.exe
	@cp ../../bin/*z3* fstar/bin || cp `which z3` fstar/bin || echo " ********** WARNING: you don't have Z3 in \\$FSTAR_HOME/bin or in your \\$PATH, skipped from package ************** "
	cd ../.. && git archive --format=tar --prefix=examples/ HEAD:examples/ | tar -x -C src/ocaml-output/fstar
	cd ../.. && git archive --format=tar --prefix=doc/tutorial/ HEAD:doc/tutorial/ | tar -x -C src/ocaml-output/fstar
	cd fstar/doc/tutorial; make
ifeq ($(OS),Windows_NT)
	zip -r -9 fstar_`git log --pretty=format:'%h' -n 1`_`uname`_`uname -m`.zip fstar
else
	tar czf fstar_`git log --pretty=format:'%h' -n 1`_`uname`_`uname -m`.tar.gz fstar
endif

parser: support.ml
	cat ../parser/parse.fsy | sed 's/^[/][/].*//g' | sed 's/^[#].*//g' | sed 's/^open .*//g' > parse.mly
	ocamlyacc parse.mly
	rm -f Microsoft_FStar_Parser_Parse.ml
	echo "open Support.Microsoft.FStar.Util" > Microsoft_FStar_Parser_Parse.ml
	echo "open Support.Microsoft.FStar.Range" >> Microsoft_FStar_Parser_Parse.ml
	echo "open Microsoft_FStar_Options" >> Microsoft_FStar_Parser_Parse.ml
	echo "open Microsoft_FStar_Absyn_Syntax" >> Microsoft_FStar_Parser_Parse.ml
	echo "open Microsoft_FStar_Absyn_Const" >> Microsoft_FStar_Parser_Parse.ml
	echo "open Microsoft_FStar_Absyn_Util" >> Microsoft_FStar_Parser_Parse.ml
	echo "open Microsoft_FStar_Parser_AST" >> Microsoft_FStar_Parser_Parse.ml
	echo "open Support.Microsoft.FStar.Parser.Util" >> Microsoft_FStar_Parser_Parse.ml
	cat parse.ml >> Microsoft_FStar_Parser_Parse.ml
#	cp ../support/ocaml/fstar-lang/src/FSLangLexer.mll lex.mll
	ocamllex ../lex.mll -o Microsoft_FStar_Parser_LexFStar.ml
	cp ../parseit.ml Microsoft_FStar_Parser_ParseIt.ml
	$(OCAMLDEP) $(INCLUDES) *.ml > .depend
	dos2unix parse.mly
ifeq ($(OS),Windows_NT)
else
	unix2dos $(PARSER_MLS)
endif

support.ml: ../support/ocaml/fstar-lib/src/support.ml
	cp ../support/ocaml/fstar-lib/src/support.ml support.ml

fstarml.ml: ../main.ml
	cp $^ $@

fstar.exe: $(FSTAR_OBJS) fstarml.ml
	$(OCAMLOPT) $(OCAMLOPTFLAGS) -o fstar.exe $^
	cp fstar.exe ../../bin/fstar.exe

# Common rules
.SUFFIXES: .ml .mli .cmo .cmi .cmx

.ml.cmo:
	$(OCAMLC) $(OCAMLFLAGS) -c $<

.mli.cmi:
	$(OCAMLC) $(OCAMLFLAGS) -c $<

.ml.cmx:
	$(OCAMLOPT) $(OCAMLOPTFLAGS) -c $<

# Clean up
clean:
	rm -fr fstar || true
	rm -f .depend fstar.exe *.cmi *.cmx *.o || true
	rm -f $(PARSER_MLS) parse.mly

# Purge (clean + delete *all* automatically generated files)
# if you do this you'll need to run `make ocaml` in `src` to get them back
purge: clean
	rm -f Microsoft_FStar_* FSharp_Format.* || true

# Dependencies
depend:
	$(OCAMLDEP) $(INCLUDES) *.ml > .depend

-include .depend
