Build wizardry
--------------

There are two lexers:
- [ml/lex.mll] (building F* via OCaml extraction)
- [lex.fsl] (building F* with F#)

The former bundles everything lexing-related into a single file. The latter has
a companion file [lexhelp.fs] that contains various routines.

There is one parser, [parse.fsy], used for building F* with F#. When extracting
F* to OCaml using F*, [parse.fsy] is run through some sed-foo in
[ocaml-output/Makefile] in order to produce a valid, ocamlyacc-compatible
[parse.mly].


The big headache with F# build and boostrapping
-----------------------------------------------

The situation is kind of complicated.
- [parse.fsi]; is auto-generated from [parse.fsy] by [fsyacc]; it is sed-copied into [boot_fsts]
  when *extracting* [lexhelp.fs] so that [lexhelp.fs] has something to type-check against; but, it
  is _not_ used when compiling the extracted OCaml code, because the token datatype is directly
  written out by [ocamlyacc] into [parse.ml]; note: this file is checked in to support the scenario
  where someone wants to bootstrap and recompile without an F# setup
- [parsefstar.fsi]; old file that was under version control, no one was ever using it, I (JP)
  removed it
- [parse.fsti]; previously used to serve the purpose of extracting [lexhelp.fs]; was WILDLY out of
  date; I (JP) removed it

If you're adding a new token, you need to edit:
- [parse.fsy]
- [lexhelp.fs] to add it to the parser keyword table (F#)
- [ml/lex.mll] to add it to the parser keyword table (OCaml)
- [parse.fsy] to expose it to the parser, possibly with an adequate precedence
