[
  "∞êÃ€\\ˇ˜i⁄ô∂ÃÀÑâﬁ",
  [
    [
      "Cases.test_cases",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "data_typing_intro_FStar.Pervasives.Native.Mktuple2@tok",
        "data_typing_intro_FStar.Tactics.Result.Success@tok",
        "function_token_typing_FStar.Reflection.Types.term",
        "function_token_typing_FStar.Tactics.Types.proofstate"
      ],
      0,
      "96960050125c8e1f95c2ed194448b841"
    ],
    [
      "Cases.test_cases_unsquash",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "data_typing_intro_FStar.Pervasives.Native.Mktuple2@tok",
        "data_typing_intro_FStar.Tactics.Result.Success@tok",
        "function_token_typing_FStar.Reflection.Types.term",
        "function_token_typing_FStar.Tactics.Types.proofstate"
      ],
      0,
      "224802b9c9fe1a247132e2b8a9714d2a"
    ],
    [
      "Cases.test_cases_bool",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "80b53d6eede6d2544447001ee9ad3bd6"
    ],
    [
      "Cases.test_cases_bool_2",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0,
      "cec4813daedcc2e9a28dc581d9f441e1"
    ],
    [
      "Cases.test_cases_bool_2",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0,
      "0d12bff5efae85e6d2fdb8c18bbe1c01"
    ],
    [
      "Cases.test_cases_bool_2",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0,
      "deaba9b8f73b12f4aa5bd91e5d6b22bd"
    ],
    [
      "Cases.test_cases_bool_2",
      4,
      2,
      1,
      [
        "@query", "primitive_Prims.op_Addition",
        "primitive_Prims.op_Equality", "primitive_Prims.op_Multiply",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0"
      ],
      0,
      "b280ca4e5c59703e2dc9a1416738c833"
    ],
    [
      "Cases.test_cases_bool_2",
      5,
      2,
      1,
      [
        "@query", "primitive_Prims.op_Addition",
        "primitive_Prims.op_Equality", "primitive_Prims.op_Multiply",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0"
      ],
      0,
      "cae474b7e41854d4ff1c983a559dd146"
    ],
    [
      "Cases.test_cases_bool_2",
      6,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0,
      "ed9f7faf8aff0fab33c9e1a023e2b050"
    ]
  ]
]