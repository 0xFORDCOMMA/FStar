[
  "∞êÃ€\\ˇ˜i⁄ô∂ÃÀÑâﬁ",
  [
    [
      "Cases.test_cases",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "data_typing_intro_FStar.Pervasives.Native.Mktuple2@tok",
        "data_typing_intro_FStar.Tactics.Result.Success@tok",
        "function_token_typing_FStar.Reflection.Types.term",
        "function_token_typing_FStar.Tactics.Types.proofstate"
      ],
      0
    ],
    [
      "Cases.test_cases",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "data_typing_intro_FStar.Pervasives.Native.Mktuple2@tok",
        "data_typing_intro_FStar.Tactics.Result.Success@tok",
        "function_token_typing_FStar.Reflection.Types.term",
        "function_token_typing_FStar.Tactics.Types.proofstate"
      ],
      0
    ],
    [
      "Cases.test_cases",
      3,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "data_typing_intro_FStar.Pervasives.Native.Mktuple2@tok",
        "data_typing_intro_FStar.Tactics.Result.Success@tok",
        "function_token_typing_FStar.Reflection.Types.term",
        "function_token_typing_FStar.Tactics.Types.proofstate"
      ],
      0
    ],
    [ "Cases.test_cases", 4, 2, 1, [ "@query" ], 0 ],
    [
      "Cases.test_cases_unsquash",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "data_typing_intro_FStar.Pervasives.Native.Mktuple2@tok",
        "data_typing_intro_FStar.Tactics.Result.Success@tok",
        "function_token_typing_FStar.Reflection.Types.term",
        "function_token_typing_FStar.Tactics.Types.proofstate"
      ],
      0
    ],
    [
      "Cases.test_cases_unsquash",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "data_typing_intro_FStar.Pervasives.Native.Mktuple2@tok",
        "data_typing_intro_FStar.Tactics.Result.Success@tok",
        "function_token_typing_FStar.Reflection.Types.term",
        "function_token_typing_FStar.Tactics.Types.proofstate"
      ],
      0
    ],
    [
      "Cases.test_cases_unsquash",
      3,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "data_typing_intro_FStar.Pervasives.Native.Mktuple2@tok",
        "data_typing_intro_FStar.Tactics.Result.Success@tok",
        "function_token_typing_FStar.Reflection.Types.term",
        "function_token_typing_FStar.Tactics.Types.proofstate"
      ],
      0
    ],
    [
      "Cases.test_cases_unsquash",
      4,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "data_typing_intro_FStar.Pervasives.Native.Mktuple2@tok",
        "data_typing_intro_FStar.Tactics.Result.Success@tok",
        "function_token_typing_FStar.Reflection.Types.term",
        "function_token_typing_FStar.Tactics.Types.proofstate"
      ],
      0
    ],
    [
      "Cases.test_cases_unsquash",
      5,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "data_typing_intro_FStar.Pervasives.Native.Mktuple2@tok",
        "data_typing_intro_FStar.Tactics.Result.Success@tok",
        "function_token_typing_FStar.Reflection.Types.term",
        "function_token_typing_FStar.Tactics.Types.proofstate"
      ],
      0
    ],
    [ "Cases.test_cases_unsquash", 6, 2, 1, [ "@query" ], 0 ],
    [ "Cases.test_cases_bool", 1, 2, 1, [ "@query" ], 0 ],
    [ "Cases.test_cases_bool", 2, 2, 1, [ "@query" ], 0 ],
    [ "Cases.test_cases_bool", 3, 2, 1, [ "@query" ], 0 ],
    [ "Cases.test_cases_bool", 4, 2, 1, [ "@query" ], 0 ],
    [ "Cases.test_cases_bool", 5, 2, 1, [ "@query" ], 0 ],
    [ "Cases.test_cases_bool", 6, 2, 1, [ "@query" ], 0 ],
    [ "Cases.test_cases_bool", 7, 2, 1, [ "@query" ], 0 ],
    [ "Cases.test_cases_bool", 8, 2, 1, [ "@query" ], 0 ],
    [ "Cases.test_cases_bool", 9, 2, 1, [ "@query" ], 0 ],
    [ "Cases.test_cases_bool", 10, 2, 1, [ "@query" ], 0 ],
    [
      "Cases.test_cases_bool_2",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Cases.test_cases_bool_2",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Cases.test_cases_bool_2",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Cases.test_cases_bool_2",
      4,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Cases.test_cases_bool_2",
      5,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Cases.test_cases_bool_2",
      6,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Cases.test_cases_bool_2",
      7,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [ "Cases.test_cases_bool_2", 8, 2, 1, [ "@query" ], 0 ],
    [ "Cases.test_cases_bool_2", 9, 2, 1, [ "@query" ], 0 ],
    [ "Cases.test_cases_bool_2", 10, 2, 1, [ "@query" ], 0 ],
    [ "Cases.test_cases_bool_2", 11, 2, 1, [ "@query" ], 0 ],
    [
      "Cases.test_cases_bool_2",
      12,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Cases.test_cases_bool_2",
      13,
      2,
      1,
      [
        "@query", "primitive_Prims.op_Addition",
        "primitive_Prims.op_Multiply", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Cases.test_cases_bool_2",
      14,
      2,
      1,
      [
        "@query", "primitive_Prims.op_Addition",
        "primitive_Prims.op_Equality", "primitive_Prims.op_Multiply",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Cases.test_cases_bool_2",
      15,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ]
  ]
]